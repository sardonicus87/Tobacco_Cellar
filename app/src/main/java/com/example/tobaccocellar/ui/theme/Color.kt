package com.example.tobaccocellar.ui.theme

import androidx.compose.ui.graphics.Color

// Standard Light //
val primaryLight = Color(0xFF206A4D)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFA9F2CD)
val onPrimaryContainerLight = Color(0xFF002114)
val secondaryLight = Color(0xFF4D6357)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFCFE9D9)
val onSecondaryContainerLight = Color(0xFF0A1F16)
val tertiaryLight = Color(0xFF3D6373)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFC1E9FB)
val onTertiaryContainerLight = Color(0xFF001F29)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFF5FBF5) // original 0xFFF5FBF5
val onBackgroundLight = Color(0xFF171D19)
val surfaceLight = Color(0xFFF5FBF5)
val onSurfaceLight = Color(0xFF171D19)
val surfaceVariantLight = Color(0xFFDBE5DD)
val onSurfaceVariantLight = Color(0xFF404943)
val outlineLight = Color(0xFF707973)
val outlineVariantLight = Color(0xFFBFC9C1)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2C322E)
val inverseOnSurfaceLight = Color(0xFFEDF2EC)
val inversePrimaryLight = Color(0xFF8DD5B2)
val surfaceDimLight = Color(0xFFD6DBD6)
val surfaceBrightLight = Color(0xFFF5FBF5)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFEFF5EF)
val surfaceContainerLight = Color(0xFFEAEFE9)
val surfaceContainerHighLight = Color(0xFFE4EAE4)
val surfaceContainerHighestLight = Color(0xFFDEE4DE)

// Standard Dark //
val primaryDark = Color(0xFF97EAC4) // 0xFF8DD5B2
val onPrimaryDark = Color(0xFF003825)
val primaryContainerDark = Color(0xFF005138)
val onPrimaryContainerDark = Color(0xFFA9F2CD)
val secondaryDark = Color(0xFFB4CCBD)
val onSecondaryDark = Color(0xFF1F352A)
val secondaryContainerDark = Color(0xFF364B40)
val onSecondaryContainerDark = Color(0xFFCFE9D9)
val tertiaryDark = Color(0xFFA5CCDE)
val onTertiaryDark = Color(0xFF073543)
val tertiaryContainerDark = Color(0xFF244C5B)
val onTertiaryContainerDark = Color(0xFFC1E9FB)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF0F1511) // original 0xFF0F1511
val onBackgroundDark = Color(0xFFDEE4DE) // original 0xFFDEE4DE
val surfaceDark = Color(0xFF0F1511)
val onSurfaceDark = Color(0xFFDEE4DE)
val surfaceVariantDark = Color(0xFF404943)
val onSurfaceVariantDark = Color(0xFFBFC9C1)
val outlineDark = Color(0xFF8A938C)
val outlineVariantDark = Color(0xFF404943)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFDEE4DE)
val inverseOnSurfaceDark = Color(0xFF2C322E)
val inversePrimaryDark = Color(0xFF206A4D)
val surfaceDimDark = Color(0xFF0F1511)
val surfaceBrightDark = Color(0xFF353B37)
val surfaceContainerLowestDark = Color(0xFF0A0F0C)
val surfaceContainerLowDark = Color(0xFF171D19)
val surfaceContainerDark = Color(0xFF1B211D)
val surfaceContainerHighDark = Color(0xFF252B28)
val surfaceContainerHighestDark = Color(0xFF303632)

// custom colors //
val listMenuScrimLight = Color(0xFFFFFFFF)
val deleteButtonLight = Color(0xFF93000A)
val favHeartLight = Color(0xFFBB0000)
val disHeartLight = Color(0xFF03B1FF)
val textFieldLight = Color(0xFFE3ECE3)
val darkNeutralLight = Color(0xFFCDD2CD)
val backgroundVariantLight = Color(0xFFECFFEC) // normal 0xFFF5FBF5
val backgroundUnselectedLight = Color(0xFFECF1EC)
val tableBorderLight = Color(0xFF9A9F9C)
val navIconLight = Color(0xFFB5F6D5) // 0xFFBEF5D9

val listMenuScrimDark = Color(0xFF000000)
val deleteButtonDark = Color(0xFF990000)
val favHeartDark = Color(0xFFCF0000)
val disHeartDark = Color(0xFF03B1FF)
val textFieldDark = Color(0xFF202926) // original 0xFF363B34
val darkNeutralDark = Color(0xFF222622)
val backgroundVariantDark = Color(0xFF162217) // normal FF0F1511
val backgroundUnselectedDark = Color(0xFF131915)
val tableBorderDark = Color(0xFF7E8380)
val navIconDark = Color(0xFFB5F6D5)

// pie charts light
val pieOneLight = Color(0xFF03B1FF)
val pieTwoLight = Color(0xFF00FDFE)
val pieThreeLight = Color(0xFF01A802)
val pieFourLight = Color(0xFF00FD01)
val pieFiveLight = Color(0xFFF4FF81)
val pieSixLight = Color(0xFFFFEA00)
val pieSevenLight = Color(0xFFFBC02D)
val pieEightLight = Color(0xFFFF9100)
val pieNineLight = Color(0xFFFF3D00)
val pieTenLight = Color(0xFF7E57C2)

// pie charts dark
val pieOneDark = Color(0xFF03B1FF)
val pieTwoDark = Color(0xFF00FDFE)
val pieThreeDark = Color(0xFF01A802)
val pieFourDark = Color(0xFF00FD01)
val pieFiveDark = Color(0xFFF4FF81)
val pieSixDark = Color(0xFFFFEA00)
val pieSevenDark = Color(0xFFFBC02D)
val pieEightDark = Color(0xFFFF9100)
val pieNineDark = Color(0xFFFF3D00)
val pieTenDark = Color(0xFF7E57C2)

// light medium //
val primaryLightMediumContrast = Color(0xFF004D34)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF3A8163)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF32473C)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF637A6D)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF204856)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF547A8A)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFF5FBF5)
val onBackgroundLightMediumContrast = Color(0xFF171D19)
val surfaceLightMediumContrast = Color(0xFFF5FBF5)
val onSurfaceLightMediumContrast = Color(0xFF171D19)
val surfaceVariantLightMediumContrast = Color(0xFFDBE5DD)
val onSurfaceVariantLightMediumContrast = Color(0xFF3C453F)
val outlineLightMediumContrast = Color(0xFF58615B)
val outlineVariantLightMediumContrast = Color(0xFF747D76)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2C322E)
val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF2EC)
val inversePrimaryLightMediumContrast = Color(0xFF8DD5B2)
val surfaceDimLightMediumContrast = Color(0xFFD6DBD6)
val surfaceBrightLightMediumContrast = Color(0xFFF5FBF5)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5EF)
val surfaceContainerLightMediumContrast = Color(0xFFEAEFE9)
val surfaceContainerHighLightMediumContrast = Color(0xFFE4EAE4)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDEE4DE)

// light high //
val primaryLightHighContrast = Color(0xFF00281A)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF004D34)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF11261C)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF32473C)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF002632)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF204856)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFF5FBF5)
val onBackgroundLightHighContrast = Color(0xFF171D19)
val surfaceLightHighContrast = Color(0xFFF5FBF5)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDBE5DD)
val onSurfaceVariantLightHighContrast = Color(0xFF1D2621)
val outlineLightHighContrast = Color(0xFF3C453F)
val outlineVariantLightHighContrast = Color(0xFF3C453F)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2C322E)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFB2FCD6)
val surfaceDimLightHighContrast = Color(0xFFD6DBD6)
val surfaceBrightLightHighContrast = Color(0xFFF5FBF5)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFEFF5EF)
val surfaceContainerLightHighContrast = Color(0xFFEAEFE9)
val surfaceContainerHighLightHighContrast = Color(0xFFE4EAE4)
val surfaceContainerHighestLightHighContrast = Color(0xFFDEE4DE)

// dark medium //
val primaryDarkMediumContrast = Color(0xFF91DAB6)
val onPrimaryDarkMediumContrast = Color(0xFF001B10)
val primaryContainerDarkMediumContrast = Color(0xFF589E7E)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFB8D1C1)
val onSecondaryDarkMediumContrast = Color(0xFF051A11)
val secondaryContainerDarkMediumContrast = Color(0xFF7E9688)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFA9D1E3)
val onTertiaryDarkMediumContrast = Color(0xFF001922)
val tertiaryContainerDarkMediumContrast = Color(0xFF7096A7)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF0F1511)
val onBackgroundDarkMediumContrast = Color(0xFFDEE4DE)
val surfaceDarkMediumContrast = Color(0xFF0F1511)
val onSurfaceDarkMediumContrast = Color(0xFFF7FCF6)
val surfaceVariantDarkMediumContrast = Color(0xFF404943)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC4CDC6)
val outlineDarkMediumContrast = Color(0xFF9CA59E)
val outlineVariantDarkMediumContrast = Color(0xFF7C857F)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4DE)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF262B28)
val inversePrimaryDarkMediumContrast = Color(0xFF005339)
val surfaceDimDarkMediumContrast = Color(0xFF0F1511)
val surfaceBrightDarkMediumContrast = Color(0xFF353B37)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0F0C)
val surfaceContainerLowDarkMediumContrast = Color(0xFF171D19)
val surfaceContainerDarkMediumContrast = Color(0xFF1B211D)
val surfaceContainerHighDarkMediumContrast = Color(0xFF252B28)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF303632)

// dark high //
val primaryDarkHighContrast = Color(0xFFEEFFF3)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFF91DAB6)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFEEFFF3)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFB8D1C1)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFF6FBFF)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFA9D1E3)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF0F1511)
val onBackgroundDarkHighContrast = Color(0xFFDEE4DE)
val surfaceDarkHighContrast = Color(0xFF0F1511)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF404943)
val onSurfaceVariantDarkHighContrast = Color(0xFFF4FDF5)
val outlineDarkHighContrast = Color(0xFFC4CDC6)
val outlineVariantDarkHighContrast = Color(0xFFC4CDC6)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFDEE4DE)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF003120)
val surfaceDimDarkHighContrast = Color(0xFF0F1511)
val surfaceBrightDarkHighContrast = Color(0xFF353B37)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0A0F0C)
val surfaceContainerLowDarkHighContrast = Color(0xFF171D19)
val surfaceContainerDarkHighContrast = Color(0xFF1B211D)
val surfaceContainerHighDarkHighContrast = Color(0xFF252B28)
val surfaceContainerHighestDarkHighContrast = Color(0xFF303632)







